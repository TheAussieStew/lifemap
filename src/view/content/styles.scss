/* Basic editor styles */

.ProseMirror:focus {
  outline: none;
}

.ProseMirror {
  >*+* {
    margin-top: 0em;
  }

  mark {
    background-color: #ffe066;
    border-radius: 0.25em;
    box-decoration-break: clone;
    padding: 0.125em 0;
  }

  p {
    margin: 0px 0;
    line-height: 1.35;
  }

  h1 {
    margin: 0em 0;
    font-family: 'EB Garamond';
  }

  h2 {
    margin: 0em 0;
    font-family: 'EB Garamond';
  }

  h3 {
    margin: 0em 0;
    font-family: 'Inter';
  }


  ul[data-type="taskList"] {
    list-style: none;
    padding: 0;
    margin: 1.5px 0;

    p {
      margin: 0;
    }

    li {
      display: flex;
      margin: 1.5px 0;

      >label {
        flex: 0 0 auto;
        margin-right: 0.5rem;
        user-select: none;
      }

      >div {
        flex: 1 1 auto;
      }

      ul li,
      ol li {
        display: list-item;
      }

      ul[data-type="taskList"]>li {
        display: flex;
      }
    }
  }


  pre {
    background: #0d0d0d;
    border-radius: 0.5rem;
    color: #fff;
    font-family: "JetBrainsMono", monospace;
    padding: 0.75rem 1rem;

    code {
      background: none;
      color: inherit;
      font-size: 0.8rem;
      padding: 0;
    }

    .hljs-comment,
    .hljs-quote {
      color: #616161;
    }

    .hljs-variable,
    .hljs-template-variable,
    .hljs-attribute,
    .hljs-tag,
    .hljs-name,
    .hljs-regexp,
    .hljs-link,
    .hljs-name,
    .hljs-selector-id,
    .hljs-selector-class {
      color: #f98181;
    }

    .hljs-number,
    .hljs-meta,
    .hljs-built_in,
    .hljs-builtin-name,
    .hljs-literal,
    .hljs-type,
    .hljs-params {
      color: #fbbc88;
    }

    .hljs-string,
    .hljs-symbol,
    .hljs-bullet {
      color: #b9f18d;
    }

    .hljs-title,
    .hljs-section {
      color: #faf594;
    }

    .hljs-keyword,
    .hljs-selector-tag {
      color: #70cff8;
    }

    .hljs-emphasis {
      font-style: italic;
    }

    .hljs-strong {
      font-weight: 700;
    }
  }
}

.mention {
  width: max-content;
  /* 61px */
  height: fit-content;
  justify-content: center;
  color: #111111;
  align-items: center;
  padding: 2px 5px 2px 5px;
  box-shadow: 0px 0.3613123810646357px 1.8065619053231785px -1.6666666666666665px rgba(0, 0, 0, 0.23), 0px 1.3731199819460742px 6.8655999097303715px -3.333333333333333px rgba(0, 0, 0, 0.19279), 0px 6px 30px -5px rgba(0, 0, 0, 0);
  background-color: #ffffff;
  overflow: hidden;
  align-content: center;
  flex-wrap: nowrap;
  gap: 2;
  border-radius: 5px;
  border: 1px solid #BBBBBB;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.ProseMirror-selectednode {
  outline: 1px solid grey;
}

/* Reset the appearance */
input[type="checkbox"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

/* Orange border for unchecked items */
.ProseMirror input[type="checkbox"]::before {
  content: "";
  margin-top: 1px;
  display: inline-block;
  width: 1em;
  transform: scale(1.4);
  height: 1em;
  border: 1.25px solid orange;
  border-radius: 1px;
  box-sizing: border-box;
}

/* Green checkbox for checked items */
.ProseMirror input[type="checkbox"]:checked::before {
  content: "âœ”";
  color: green;
  display: inline-block;
  width: 1em;
  transform: scale(1.4);
  height: 1em;
  border: 1.25px solid green;
  border-radius: 1px;
  box-sizing: border-box;
  line-height: 0.9; /* Adjust this value to offset the tick vertically */
}



.ProseMirror span {
  animation: fadeIn 0.7s;
}

// TODO: Tidy up and properly group CSS
.ProseMirror {
  >*+* {
    margin-top: 0.75em;
  }

  .is-empty::before {
    content: attr(data-placeholder);
    float: left;
    color: #adb5bd;
    pointer-events: none;
    height: 0;
  }

  .details {
    display: flex;

    >button {
      display: flex;
      cursor: pointer;
      background: transparent;
      border: none;
      padding: 0;

      &::before {
        content: '\25B6';
        display: flex;
        justify-content: center;
        align-items: center;
        width: 1.5em;
        height: 1.5em;
      }
    }

    &.is-open>button::before {
      content: '\25BC';
    }

    >div {
      flex: 1 1 auto;
    }

    :last-child {
      margin-bottom: 0;
    }
  }
}

.has-focus {
  box-shadow: 1 5 10px rgba(240, 230, 255, 0.8);
}


// Mapbox
.map-container {
  height: 400px;
  width: "100%";
  border-radius: 5px;
}

.sidebar {
  background-color: rgba(35, 55, 75, 0.9);
  color: #fff;
  padding: 6px 12px;
  font-family: monospace;
  z-index: 1;
  position: absolute;
  top: 0;
  left: 0;
  margin: 12px;
  width: max-content;
  border-radius: 4px;
}